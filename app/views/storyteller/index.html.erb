<div id='storyTeller'>
  
 <!-- -----------------------------------------------------------------------
  *  if device is portable we are adding ios class to html tag
  *  so new classes with .ios .someclass path are used instead of basic ones
  *----------------------------------------------------------------------- -->
  <script>
    var isMobile = function() {
      return /iPad|iPod|iPhone|Android/.test(navigator.userAgent) || document.location.hash == "#ipad";
    }

    var isPhone = function() {    
      return isMobile() && window.innerWidth < 768;
    }




    if (isMobile()) {

      document.documentElement.className = document.documentElement.className + " ios";
    }  </script>


  <!--[if lte IE 8]><style type="text/css">
  .video-container video,
  .video-container img 
  {
    position: static;
  }
  </style><![endif]-->


  <!-- -----------------------------------------------------------------------
  *  array of functions added throught page which should be called at the end of page parsing with "await"  
  *  function which is called at the bottom of the page
  ----------------------------------------------------------------------- -->
  <script>

    (function() {      
      var defers = [];
      defer = function(f) { defers.push(f); };
      await = function() { defers.forEach(function(f,s) { f();}); };

    })();</script>

<div class="navigation">
  <div class="navigation-left">
    <a class="navigation-logo" href="http://www.jumpstart.ge" alt="Jumpstart"></a>    
    <a class="navigation-headline" href="#"><%= @story.title %></a>    
  </div>
  <div class="navigation-right">
    <a href="#" class="navigation-volume"><div class="navigation-icon"></div></a>
    <div class="navigation-sections">     
     <% @story.sections.where("has_marker = 1").each_with_index do |s,s_i| %>
      <a href="#<%= s_i+1 %>" class="navigation-section" title="<%= s.title %>"><%= s_i+1 %></a>
     <% end %>          
    </div>
  </div>
</div>

  <!-- -----------------------------------------------------------------------
  *  collecting navigation sections and it's markers
  *  binding click events on anchors and navigation section on resize and scroll
  *----------------------------------------------------------------------- -->
  <script>

      defer(function() {    
          var anchor = d3.selectAll(".navigation-section").on("click", clicked),
              marker = d3.selectAll(".navigation-marker"),
              markerOffsets;

          d3.select(".navigation-headline").on("click", clicked);

          d3.select(window)
              .on("resize.navigation", resized)
              .on("load.navigation", resized)
              .on("scroll.navigation", scrolled);

          resized();

          function resized() {
            markerOffsets = marker.datum(function(d, i) { return i ? this.offsetTop : 0; }).data();
            scrolled();
          }

          function scrolled() {
            var j = Math.max(0, Math.min(markerOffsets.length - 1, d3.bisectLeft(markerOffsets, pageYOffset + 80) - 1));
            anchor.classed("navigation-section--active", function(d, i) { return i === j; });
          }

          function clicked(d, i) {
            console.log(d); console.log(i);
            d3.event.preventDefault();
            d3.transition().duration(750).tween("scroll", function() {
              var offset = d3.interpolateNumber(pageYOffset, markerOffsets[i]);
              return function(t) { scrollTo(0, offset(t)); };
            });
          }

      });</script>
 <% alignment = { "left" => -1, "center" => 0, "right" => 1 } %>
<div class="main">
  <div class="article">     
     <% @story.sections.order('sort_order').each_with_index do |section,s_i| %>
        <% if section.type_id == 1 %>
          <div class="section column">
            <% if section.has_marker == 1 %>
               <a class="navigation-marker" id="<%= s_i + 1 %>"></a>
            <% end %>
            <h3 class='column-title'><%= section.content.title %></h3>
            <h4 class='column-subtitle'><%= section.content.subtitle %></h4>
            <%= section.content.content.html_safe %>     
          </div>
        <% else %>
          <div class="section video-sequence">
            <% if section.has_marker == 1 %>
               <a class="navigation-marker" id="<%= s_i + 1 %>"></a>
            <% end %>
            <% section.media.each_with_index do |m,m_i| %>
                <% dataVideo = '' %>
                <% if m.media_type == 2 && m.video.exists? %>                
                  <% dataVideo = "data-video='#{File.basename(m.video_file_name,'.mp4')}'".html_safe %>
                <% end %> 
                

              <div class="video"  <%=  dataVideo.html_safe %> >                
                  <div class="video-container">
                    <% if m.media_type == 1 %>                                                                            
                      <img src="<%= m.image.url %>">
                    <% elsif m.media_type == 2  %>
                        <% if  m.image.exists? %>                       
                        <!--[if lte IE 8]><img src="<%= m.image.url %>"><![endif]-->
                        <% end %>                                           
                    <% end %>                        
                    <% if m.source.present? %>
                       <div class="video-source"><%= m.source %></div>                       
                    <% end %>                       
                  </div>
                  <% if m.caption.present? %>

                   <% if m.caption.length < 160 %>
                        <% caption_class = alignment.index(m.caption_align) %>
                    <% else %>
                     <% caption_class = 'long' %>
                    <% end %>


                    <% if s_i == 0 && m_i == 0 %>
                      <% caption_class = 'head' %>              
                    <% end %>

                    <div class="video-caption video-caption--<%= caption_class %>">
                    <% if caption_class == 'head'  %>                      
                          <div class="video-headline headline"> <%= m.caption %> </div>
                          <div class="video-summary"> <%= m.summary %> </div>
                          <div class="scroll-prompt">
                            Scroll<br>
                            <svg width="18" height="8">
                              <path d="M0,0L9,7L18,0"></path>
                            </svg>
                          </div>                      
                    <% else %>
                      <% if m.summary.present? %>
                          <div class="video-headline headline"> <%= m.caption %> </div>
                          <div class="video-summary"> <%= m.summary %> </div>
                      <% else %>
                          <%= m.caption  %>
                       <% end  %>            
                  <% end %>  
                  </div>      
                    <% end %>                              
              </div>        
            <% end %>        
          </div>
        <% end %>        
        
     <% end %>      
    <!--

      <div class="video-caption video-caption--head">
          <div class="video-headline headline" >წმ. ღირსი მამა გაბრიელი<br/>აღმსარებელი-სალოსი</div>
          <div class="video-summary">ღმერთი არ იძლევა დიდი ნიჭს დიდი განსაცდელის გარეშე. ღმერთი ყველა იმ ზომით მოგვივლენს განსაცდელს, რისი ატანაც შეგვიძლია, შესაბამისად გვეძლევა ღვთის მადლიც.</div>
          <div class="scroll-prompt">
            Scroll<br>
            <svg width="18" height="8">
              <path d="M0,0L9,7L18,0"></path>
            </svg>
          </div>
        </div>


       <div class="section video-sequence" data-audio="below-deck">
      <div class="video" data-video="under-flash-light">

       <div class="image image--diptych">
        <img src="http://i1.nyt.com/newsgraphics/2013/10/24/south-china-sea-videos/assets/696/island-pag-asa.jpg">
        <img src="http://i1.nyt.com/newsgraphics/2013/10/24/south-china-sea-videos/assets/696/kids.jpg">
        <div class="caption">About 120 people live at any one time on Pag-asa, including civilians.</div>
      </div>
       <div class="image">
        <img src="http://i1.nyt.com/newsgraphics/2013/10/24/south-china-sea-videos/assets/696/chinese-coast-guards.jpg">
        <div class="caption">Chinese Coast Guard cutters patrol within sight of the Sierra Madre.</div>
      </div>     
     -->
  </div>
</div>

  <!-- -----------------------------------------------------------------------
  *  data hash for mobile devices , they use different images   
  *----------------------------------------------------------------------- -->
  <script>


    var mobileImages = 
    [
      
    <%  @story.sections.order('sort_order').each_with_index do |s,s_i|       
         
          if s.type_id == 2 
            secLength = s.media.length   
            s.media.each_with_index do |m,m_i| 
          %>
            {
              file: "mobile_1024/<%= m.image_file_name %>",
              section: <%= s_i+1 %>,
              slide: <%= m_i+1 %>,      
              align: '<%= alignment.index(m.caption_align) %>',
              <% if secLength == m_i+1 %>
                hideRule: true,
              <% end %>         
            }
            <% if secLength != (m_i+1) %>
              ,
    <%        end            
            end 
          


          end 
        end 
    %>  
    ];</script>

  <script>

    function mobileReorient() {

      var height = window.innerHeight - 40;

      if (height > (720*.59) && window.innerWidth < 768) height = (720*.59);

      document.querySelectorAll(".video-sequence:first-child .video:first-of-type .video-container")[0].style.height = height + "px";

      document.querySelectorAll(".video-sequence:first-child .video:first-of-type .video-caption--head")[0].style.height = height + "px";
    }

    (function() {

      if (isMobile()) mobileReorient();

    })();


    defer(function() {

    /* Only do if we're on iPad, iPhone or Android -- TG */
    if (!isMobile()) return false;

    var _mobile_assets =  "/system/places/images/<%= @story.id %>/";

    d3.select(window)
      .on("resize", mobileReorient)
      .on("scroll", function() {
          d3.select(".navigation")
            .classed("navigation-solid", window.scrollY > 350)
      });

/*
  remove br from headlines
  add ios-loaded class to first video-sequence
  remove br from byline style
  we don't need this it's for map sequence

*/
    d3.select(".headline").html( d3.select(".headline").html().replace("<br>", " <br>") )

    d3.select(".video-sequence:first-of-type").classed("ios-loaded", true);

   // d3.select(".column .byline").html( d3.select(".column .byline").html().replace("<br>", " <br>") )

    //d3.select(".section:nth-child(7)").classed("map-sequence", true);


/*
  scripts work with two devices phones and other devices like pads
  so it would 2 devices in the future phone and pad

  with small delay loop through hash 

  if device is phone then replace values with phone inner values
*/
    setTimeout(function() {

      mobileImages.forEach(function(image) {

        /* if device is phone then replace values with phone inner values */
        if (isPhone() && image.phone) {
          for (var i in image.phone) {
            image[i] = image.phone[i];
          }
        }

    /* if device is phone then change path from 1024 to 640 */
        if (isPhone()) {
          if (image.file) image.file = image.file.replace("mobile_1024", "mobile_640");
        }

        /* on section missing stop here current loop */
        if (!image.section) return false;

    /* create path to image with fixed path and file name */
        image.url = _mobile_assets + image.file;


    
        var container;
    /*  if slide number exicts 
      find container
      if type not (map && hide) change html to img tag with url
      if type not (hide) 
        if type map caption from file options without # (caption-)
        else caption- with first word of file options
      slide assign
    */
        if (image.slide) {

          container = d3.select(".section:nth-child(" + image.section + ") .video:nth-of-type(" + image.slide + ") .video-container")

          if (image.type != "map" && image.type != "hide") {


            container.html("").append("img")
              .attr("src", image.url);

          }

          if (image.type != "hide") {

            var css;


            if (image.type == "map") css = "caption-" + image.file.replace("#","");
            else css = "caption-" + image.file.match(/\/([\w-]+)/)[1];

              d3.select(".section:nth-child(" + image.section + ") .video:nth-of-type(" + image.slide + ") .video-caption")
                .classed(css, true)

          }


          var slide = d3.select(".section:nth-child(" + image.section + ") .video:nth-of-type(" + image.slide + ")");

        }

    /* aligning by options */
        if (image.align) d3.select(".section:nth-child(" + image.section + ") .video:nth-of-type(" + image.slide + ") .video-caption")
          .classed(image.align.split(" ").map(function(dir) {
                return "align-" + dir
              }).join(" "), true)

    
        if (!image.hideRule && slide) slide.append("div")
            .attr("class", "video-rule")


        /* if phone and map then replace tag */
        if (image.target == "map") {

          container = d3.select(".section:nth-child(" + image.section + ") .map")

          var source = d3.select(".map-source").html();

          if (isPhone()) container.html("<div class='map-source'>" + source + "</div>")

        }


    /* map-hide class it type hide */
        if (image.type == "hide") slide.classed("map-hide", true)

        if (image.type == "map") {

          container.html( container.html() + d3.select(image.file).text() )
        }


    /* add custom caption if specified */
        if (image.mobileCaption) {
          d3.select(".section:nth-child(" + image.section + ") .video:nth-of-type(" + image.slide + ") .video-caption").html(image.mobileCaption);
        }


        /* add src to image tag and if has diptych use it */
        if (image.type == "image") d3.select(".section:nth-child(" + image.section + ") .image:nth-child(" + image.slide + ") img")
            .attr("src", function(d) { return image.url; })

        if (image.type == "diptych") d3.select(".section:nth-child(" + image.section + ") .image:nth-child(" + image.slide + ") img:nth-child(" + image.image + ")")
            .attr("src", function(d) { return image.url; })

      })

    }, 200)


    });</script>
 
  <script>
 /* this scripts included when device is not mobile */
      defer(function() {

      /* Just skip if we're on iPad, iPhone or Android -- TG */
      if (isMobile()) return false;
      var _video_assets = "/system/places/video/<%= @story.id %>/original/",
          _image_assets = "/system/places/images/<%= @story.id %>/original/",
          _audio_assets = "/system/places/audio/<%= @story.id %>/original/";

      var mute = false,
          muteVolume = "volume",
          fixRatio = 16 / 9,
          fixHeight = innerWidth / fixRatio,
          fixTop = Math.round((innerHeight - fixHeight) / 2),
          fadeTop = Math.max(200, fixTop),
          fadeBottom = Math.min(innerHeight - 200, fixTop + fixHeight),
          fade = d3.interpolateRgb("#000", "#fff");

      var headline = d3.select(".navigation-headline");

      var sequence = d3.selectAll(".video-sequence")
          .datum(function() {
            return {
              first: !this.previousElementSibling,
              audio: this.getAttribute("data-audio"),
              length: this.querySelectorAll(".video").length
            };
          })
          .call(d3.behavior.watch()
            .on("scroll", sequencescrolled)
            .on("statechange", sequencestatechanged));

      sequence.filter(function(d) { return d.audio; }).append("audio")
          .attr("src", function(d) { return _audio_assets + d.audio + ".mp3"; })
          .property("loop", true);

      var section = d3.selectAll(".video")
          .datum(function() {
            var previous = this.previousElementSibling,
                next = this.nextElementSibling;
            return {
              video: this.getAttribute("data-video"),
              animation: this.hasAttribute("data-animation"),
              first: !previous || !d3.select(previous).classed("video"),
              last: !next || !d3.select(next).classed("video")
            };
          });

      var sectionFixed = sequence.selectAll(".video")
          .each(function(d) { d.sequence = this.parentNode.__data__; })
          .call(d3.behavior.watch()
            .on("scroll", fixscrolled)
            .on("statechange", fixstatechanged));

      var container = section.select(".video-container");

      var video = container.filter(function(d) { return d.video; }).append("video")
          .attr("preload", "none")
          .attr("poster", function(d) { return d.animation && !d.first ? _image_assets + d.video + "-poster.jpg?2" : null; })
          .property("loop", function(d) { return !d.animation; })
          .text("Your browser does not support this video.");

      video.append("source")
          .attr("src", function(d) { return _video_assets + d.video + ".mp4"; })
          .attr("type", "video/mp4");

      // video.append("source")
      //     .attr("src", function(d) { return _video_assets + d.video + ".webm"; })
      //     .attr("type", "video/webm");

      if (!supportsViewportUnits()) sectionFixed.append("div")
          .style("height", fixHeight + "px");

      var containerFixed = sectionFixed.select(".video-container")
          .style("z-index", function(d) { return d.first || d.last ? 1 : 2; })
          .style("position", function(d) { return d.first || d.last ? "absolute" : "fixed"; })
          .style("top", function(d) { return d.first || d.last ? null : fixTop + "px"; })
          .style("display", function(d) { return d.first || d.last ? null : "none"; });

      containerFixed.append("div")
          .attr("class", "video-sequence-indicator")
          .style("margin-top", function(d) { return -d.sequence.length * 1.4 / 2 + "em"; })
          .text(function(d, i) { return d3.range(d.sequence.length).map(function(j) { return i === j ? "●" : "○"; }).join("\n"); });

      var muteButton = d3.select(".navigation-volume")
          .on("click", muted);

      d3.select(window)
          .on("load.video", loaded)
          .on("resize.video", resized);

      d3.select("video")
          .attr("preload", "auto");

      resized();

      function loaded() {
        video.attr("preload", function(d) { return d.first ? "auto" : "none"; });
      }

      function muted() {
        mute = !mute;
        muteVolume = mute ? "_volume" : "volume";
        muteButton.classed("navigation-volume--muted", mute);
        d3.event.preventDefault();
        d3.selectAll("audio,video").interrupt().property("volume", mute
            ? function() { this._volume = this.volume; return 0; }
            : function() { return this._volume; });
      }

      function resized() {
        fixHeight = innerWidth / fixRatio;
        fixTop = Math.round((innerHeight - fixHeight) / 2);
        fadeTop = Math.max(200, fixTop);
        fadeBottom = Math.min(innerHeight - 200, fixTop + fixHeight);
        d3.select(".video-sequence:first-child").style("margin-top", fixTop + "px");
        containerFixed.style("height", fixHeight + "px").filter(function(d) {
          var rect = this.parentNode.getBoundingClientRect();
          return d.first ? rect.top < fixTop
              : d.last ? rect.bottom >= fixTop + fixHeight
              : true;
        }).style("top", fixTop + "px");
      }

      function fixscrolled(d) {
        if (d.first || d.last) {
          var fixed = (d.first && d3.event.rect.top < fixTop)
              || (d.last && d3.event.rect.bottom >= fixTop + fixHeight);
          d3.select(this.querySelector(".video-container"))
              .style("z-index", fixed ? 2 : 1)
              .style("position", fixed ? "fixed" : "absolute")
              .style("top", fixed ? fixTop + "px" : null);
        }

        var section = d3.select(this),
            container = section.select(".video-container"),
            videoNode = this.querySelector(".video-container video"),
            volume = 1;

        var opacityTop = d3.event.rect.top - fixHeight / 4,
            opacity = opacityTop > fixTop + fixHeight * 4 / 5 ? 0 // previous video fully opaque
              : !d.last && opacityTop < fixTop - fixHeight ? 0 // next video fully covers this video
              : opacityTop < fixTop ? 1 // this video is fully opaque, but may be covered by next video
              : Math.max(0, Math.min(1, 1 - (opacityTop - fixTop) / (fixHeight / 5))); // this video is partially opaque

        if (d.first) {
          if (videoNode) {
            volume = d3.event.rect.top < fixTop + fadeTop ? Math.max(0, Math.min(1, 1 - (d3.event.rect.top - fixTop) / fadeTop)) : 0;
            var play = d3.event.rect.top <= fixTop + fadeTop;
            if (videoNode.paused) {
              if (play && (!d.animation || (videoNode.currentTime < videoNode.duration && volume > .8))) {
                videoNode.play();
              }
            } else if (!play) {
              videoNode.pause();
            }
          }
          container.style("opacity", opacityTop >= fixTop - fixHeight ? 1 : 0);
        } else {
          container.style("opacity", opacity);
          if (videoNode) {
            if (videoNode.paused) {
              if (opacity) {
               if (!d.animation || (videoNode.currentTime < videoNode.duration && opacity > .8)) {
                  videoNode.play();
                }
              } else if (videoNode.currentTime) {
                videoNode.currentTime = 0;
              }
            } else if (!opacity) {
              videoNode.pause();
              if (videoNode.currentTime) videoNode.currentTime = 0;
            }
          }
        }

        if (d.last) {
          if (videoNode) {
            volume = d3.event.rect.bottom < fadeBottom ? Math.max(0, Math.min(1, 1 - (fadeBottom - d3.event.rect.bottom) / fadeTop)) : 1;
            var play = d3.event.rect.bottom >= fadeBottom - fadeTop;
            if (videoNode.paused) {
              if (play && (!d.animation || (videoNode.currentTime < videoNode.duration && volume > .8))) {
                videoNode.play();
              }
            } else if (!play) {
              videoNode.pause();
            }
          }
        }

        section.select(".video-caption").style("opacity", opacityTop > fixTop ? (d.first ? 1 : Math.max(0, 1 - (opacityTop - fixTop) / (fixHeight / 5))) // fade in from bottom
            : opacityTop > fixTop - fixHeight * 4 / 5 ? 1 // this video is fully opaque and not covered
            : d.last ? 1 : Math.max(0, (opacityTop - fixTop + fixHeight * 4 / 5) / (fixHeight / 5) + 1)); // fade out to top

        if (videoNode) {
          videoNode[muteVolume] = volume = volume !== 1 ? volume // special-case volume for first and last fade
              : opacityTop < fixTop - fixHeight ? 0 // video is fully covered by next video
              : opacityTop < fixTop - fixHeight / 2 ? Math.max(0, Math.min(1, (opacityTop - fixTop + fixHeight) / (fixHeight / 2)))
              : opacity;

          if (d.first && d.sequence.first) headline.style("opacity", 1 - volume);
        }
      }

      function fixstatechanged(d) {
        d3.select(this.querySelector(".video-container"))
            .style("display", d3.event.state ? null : "none")
          .select("video")
            .each(function() {
              if (!d3.event.state) {
                if (!this.paused) this.pause();
                if (this.currentTime) this.currentTime = 0;
              }
            });

        if (d.first && d.sequence.first && !d3.event.state) headline.style("opacity", null);
      }

      function sequencescrolled() {
        var opacity = Math.max(0, Math.min(1, d3.event.rect.bottom < fadeBottom ? (fadeBottom - d3.event.rect.bottom) / fadeTop
            : d3.event.rect.top < fixTop + fadeTop ? (d3.event.rect.top - fixTop) / fadeTop
            : 1));
        d3.select("body").style("background", fade(opacity));
        d3.select(this).select("audio").property(muteVolume, 1 - opacity);
      }

      function sequencestatechanged() {
        var sequence = d3.select(this),
            audio = sequence.select("audio");
        if (d3.event.state) {
          sequence.selectAll("video").each(function() { this.preload = "auto"; });
          audio.each(function() { this.play(); });
        } else {
          d3.select("body").style("background", null);
          audio.each(function() { this.pause(); });
        }
      }

      function supportsViewportUnits() {
        var element = d3.select("body").append("div").style("width", "50vw"),
            expected = innerWidth / 2,
            actual = parseFloat(element.style("width"));
        element.remove();
        return Math.abs(expected - actual) <= 1;
      }

      });</script>

<div class="section footer-section">
  <a href="http://www.jumpstart.ge">Contact Us</a>
</div>
<!--[if gt IE 8]><!-->

  <!-- -----------------------------------------------------------------------
  *  D3 library
  *----------------------------------------------------------------------- -->  
  <%= javascript_include_tag 'd3' %>

<script>

  (function() {

    var watched = [];

    d3.behavior.watch = function() {
      var event = d3.dispatch("statechange", "scroll");

      function watch(selection) {
        selection.each(function(i) {
          watched.push({
            element: this,
            state: 0,
            index: i,
            event: event
          });
        });
      }

      return d3.rebind(watch, event, "on");
    };

    if (/iPhone|iPad|iPad|Android/.test(navigator.userAgent) || location.hash == "#ipad") {
      d3.select(window)
          .on("resize.watch", watch_scrolledStatic)
          .on("DOMContentLoaded.watch", watch_scrolledStatic);
    } else {
      d3.select(window)
          .on("resize.watch", watch_scrolled)
          .on("scroll.watch", watch_scrolled)
          .on("DOMContentLoaded.watch", watch_scrolled);
    }

    function watch_scrolled() {
      watched.forEach(function(watch) {
        var rect = watch.element.getBoundingClientRect();
        if (rect.top + rect.height < 0 || rect.bottom - rect.height - innerHeight > 0) {
          watch_state(watch, 0);
        } else {
          var t = rect.top / (innerHeight - rect.height);
          watch_state(watch, t < 0 || t > 1 ? 1 : 2);
          watch_dispatch(watch, {type: "scroll", offset: t, rect: rect});
        }
      });
    }

    function watch_scrolledStatic() {
      watched.forEach(function(watch) {
        watch_state(watch, 1);
        watch_dispatch(watch, {type: "scroll", offset: .5, rect: {top: 0}}); // XXX rect
      });
    }

    function watch_state(watch, state1) {
      var state0 = watch.state;
      if (state0 !== state1) watch_dispatch(watch, {
        type: "statechange",
        state: watch.state = state1,
        previousState: state0
      });
    }

    function watch_dispatch(watch, event) {
      var element = watch.element,
          sourceEvent = event.sourceEvent = d3.event;
      try {
        d3.event = event;
        watch.event[event.type].call(element, element.__data__, watch.index);
      } finally {
        d3.event = sourceEvent;
      }
    }

    await();

})();</script>

<!--<![endif]-->
 </div> 